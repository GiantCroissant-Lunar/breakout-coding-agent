name: Auto-Assign Next Micro-Issue

on:
  issues:
    types: [closed]

permissions:
  issues: write

jobs:
  assign-next-micro-issue:
    runs-on: ubuntu-latest
    # Only trigger for Game-RFC micro-issues that were closed (not manually closed)
    if: contains(github.event.issue.title, 'Game-RFC-') && github.event.issue.state_reason == 'completed'

    steps:
    - name: Auto-assign next micro-issue
      run: |
        set -euo pipefail
        REPO="${{ github.repository }}"
        CLOSED_ISSUE_TITLE="${{ github.event.issue.title }}"
        CLOSED_ISSUE_NUM="${{ github.event.issue.number }}"
        
        echo "üîÑ Processing closed micro-issue: $CLOSED_ISSUE_TITLE (#$CLOSED_ISSUE_NUM)"
        
        # Extract Game-RFC and micro-issue numbers (e.g., "Game-RFC-004-1" ‚Üí RFC=004, MICRO=1)
        if [[ "$CLOSED_ISSUE_TITLE" =~ Game-RFC-([0-9]+)-([0-9]+) ]]; then
          RFC_NUM="${BASH_REMATCH[1]}"
          CURRENT_MICRO="${BASH_REMATCH[2]}"
          NEXT_MICRO=$((CURRENT_MICRO + 1))
          
          echo "üìã Looking for next micro-issue: Game-RFC-$RFC_NUM-$NEXT_MICRO"
          
          # Find the next sequential micro-issue
          NEXT_ISSUE=$(gh issue list --repo "$REPO" --state open --json number,title \
            --jq ".[] | select(.title | test(\"Game-RFC-$RFC_NUM-$NEXT_MICRO:\")) | .number" | head -1 || true)
          
          if [ -n "$NEXT_ISSUE" ]; then
            echo "‚úÖ Found next micro-issue #$NEXT_ISSUE"
            
            # Get Copilot Bot user info
            COPILOT_LOGIN=$(gh api graphql -f query='
              query {
                repository(owner: "GiantCroissant-Lunar", name: "breakout-coding-agent") {
                  suggestedActors(capabilities: [CAN_BE_ASSIGNED], first: 100) {
                    nodes {
                      login
                      __typename
                      ... on Bot {
                        id
                      }
                    }
                  }
                }
              }' --jq '.data.repository.suggestedActors.nodes[] | select(.login == "copilot-swe-agent" and .__typename == "Bot") | .login' || echo "Copilot")
            
            # Assign the next micro-issue to Copilot
            echo "ü§ñ Assigning issue #$NEXT_ISSUE to $COPILOT_LOGIN..."
            gh issue edit "$NEXT_ISSUE" --repo "$REPO" --add-assignee "$COPILOT_LOGIN" || \
              gh issue edit "$NEXT_ISSUE" --repo "$REPO" --add-assignee "Copilot"
            
            # Add progression comment
            gh issue comment "$NEXT_ISSUE" --repo "$REPO" --body "üîÑ **Auto-assigned from micro-issue progression**

Previous micro-issue #$CLOSED_ISSUE_NUM ($CLOSED_ISSUE_TITLE) completed successfully.

This is the next sequential task in the Game-RFC-$RFC_NUM implementation chain.

**Dependencies completed**: Game-RFC-$RFC_NUM-$CURRENT_MICRO ‚úÖ"
            
            echo "‚úÖ Successfully assigned next micro-issue #$NEXT_ISSUE to Copilot"
            
            # Check if this completes the entire Game-RFC
            REMAINING_ISSUES=$(gh issue list --repo "$REPO" --state open --json title \
              --jq ".[] | select(.title | test(\"Game-RFC-$RFC_NUM-[0-9]+:\")) | .title" | wc -l || echo 1)
            
            if [ "$REMAINING_ISSUES" -eq 1 ]; then
              echo "üéØ This is the final micro-issue for Game-RFC-$RFC_NUM!"
              gh issue comment "$NEXT_ISSUE" --repo "$REPO" --body "üéØ **Final micro-issue for Game-RFC-$RFC_NUM**

This completes the Game-RFC-$RFC_NUM implementation. After this issue is resolved, Game-RFC-$RFC_NUM will be fully implemented! üöÄ"
            fi
            
          else
            echo "‚ÑπÔ∏è No next micro-issue found for Game-RFC-$RFC_NUM-$NEXT_MICRO"
            echo "This may be the final micro-issue in this Game-RFC series."
            
            # Comment on completed Game-RFC
            gh issue list --repo "$REPO" --state open --label coordinator --json number,title \
              --jq ".[] | select(.title | test(\"Game-RFC-$RFC_NUM\\b\")) | .number" | head -1 | while read coordinator_issue; do
              if [ -n "$coordinator_issue" ]; then
                gh issue comment "$coordinator_issue" --repo "$REPO" --body "‚úÖ **Game-RFC-$RFC_NUM Implementation Complete**

All micro-issues for Game-RFC-$RFC_NUM have been completed:
- Final micro-issue: #$CLOSED_ISSUE_NUM ($CLOSED_ISSUE_TITLE)

Game-RFC-$RFC_NUM is now ready for integration testing and closure! üéâ"
              fi
            done
          fi
          
        else
          echo "‚ÑπÔ∏è Not a micro-issue format, skipping auto-assignment"
        fi
        
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Success notification
      run: |
        echo "üéâ Auto-progression workflow completed!"
        echo "Next micro-issue has been assigned to continue the implementation chain."