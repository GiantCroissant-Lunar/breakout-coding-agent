name: Micro-Issue Automation

on:
  workflow_dispatch:
    inputs:
      game_rfc:
        description: 'Game-RFC to decompose (e.g., Game-RFC-004)'
        required: true
        type: string
      create_batch:
        description: 'Create batch of micro-issues'
        required: false
        default: 'true'
        type: boolean

permissions:
  contents: read
  issues: write

jobs:
  create-micro-issues:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Create Micro-Issues
      run: |
        echo "ðŸ”§ Creating micro-issues using Python script..."
        
        # Make Python script executable
        chmod +x .github/scripts/create_micro_issues.py
        
        # Run Python micro-issue creation script
        python .github/scripts/create_micro_issues.py
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GAME_RFC: ${{ github.event.inputs.game_rfc }}
        
    - name: Summary
      run: |
        echo "âœ… Micro-issue creation completed for ${{ github.event.inputs.game_rfc }}"
        echo ""
        echo "ðŸŽ¯ Strategy Benefits:"
        echo "- Smaller scope = higher success rate"
        echo "- Isolated failures = easier recovery"
        echo "- Sequential dependencies = controlled progression"
        echo "- Automatic assignment = no manual intervention"
        echo ""
        echo "ðŸ“‹ Next Steps:"
        echo "1. Monitor first micro-issue (assigned to Copilot)"
        echo "2. Assign subsequent issues after dependencies complete"
        echo "3. Use 'start over' approach if any issue fails"