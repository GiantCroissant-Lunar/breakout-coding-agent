name: Assign Copilot to Game-RFC Issues

on:
  issues:
    types: [opened, reopened, labeled, edited]
  schedule:
    - cron: '*/10 * * * *'
  workflow_dispatch:
    inputs:
      issue:
        description: 'Specific issue number to (re)assign (optional)'
        required: false

permissions:
  issues: write

jobs:
  assign:
    # Run on:
    # - issues events where title/labels indicate a Game-RFC
    # - workflow_dispatch (manual backfill)
    if: |
      (github.event_name == 'issues' && (
        contains(github.event.issue.title, 'Game-RFC-') ||
        contains(join(github.event.issue.labels.*.name, ','), 'game-rfc')
      )) || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
    - name: Get GitHub App token (fallback)
      id: app-token
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ secrets.APP_ID }}
        private-key: ${{ secrets.APP_PRIVATE_KEY }}

    - name: Resolve token for assignment
      id: tokens
      run: |
        if [ -n "${{ secrets.COPILOT_ASSIGN_TOKEN }}" ]; then
          echo "GH_TOKEN_SOURCE=PAT" >> $GITHUB_ENV
          echo "EFFECTIVE_GH_TOKEN=${{ secrets.COPILOT_ASSIGN_TOKEN }}" >> $GITHUB_ENV
        else
          echo "GH_TOKEN_SOURCE=APP" >> $GITHUB_ENV
          echo "EFFECTIVE_GH_TOKEN=${{ steps.app-token.outputs.token }}" >> $GITHUB_ENV
        fi
        echo "Token source: ${GH_TOKEN_SOURCE:-unknown}"

    - name: Preflight gh environment
      run: |
        set -euo pipefail
        echo "Repo: $GITHUB_REPOSITORY"
        gh --version
        gh auth status || true
      env:
        GH_TOKEN: ${{ env.EFFECTIVE_GH_TOKEN }}
    - name: Ensure Copilot is assigned (REST)
      run: |
        set -euo pipefail
        REPO=${{ github.repository }}
        
        # Determine target issue(s)
        TARGET_ISSUES=""
        if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ github.event.inputs.issue }}" ]; then
          TARGET_ISSUES="${{ github.event.inputs.issue }}"
        elif [ "${{ github.event_name }}" = "issues" ]; then
          TARGET_ISSUES="${{ github.event.issue.number }}"
        else
          # Scheduled or manual without input: find all open Game-RFC issues missing Copilot
          TARGET_ISSUES=$(gh issue list --repo "$REPO" --state open --label game-rfc --json number,assignees \
            --jq '.[] | select((.assignees|map(.login)|index("Copilot"))|not) | .number' || true)
        fi
        
        if [ -z "$TARGET_ISSUES" ]; then
          echo "No target issues to assign"
          exit 0
        fi
        
        # Pre-check: is Copilot assignable to this repo?
        if gh api repos/"$REPO"/assignees/Copilot -X GET -i | head -1 | grep -q " 204 "; then
          echo "Copilot is assignable to $REPO"
        else
          echo "Copilot is NOT assignable to $REPO (API returned non-204)."
          echo "List of assignables (first 20):"
          gh api repos/"$REPO"/assignees --jq '.[].login' | head -20 || true
        fi

        for ISSUE in $TARGET_ISSUES; do
          echo "Checking assignment for issue #$ISSUE"
          ASSIGNEES=$(gh api repos/"$REPO"/issues/"$ISSUE" --jq '.assignees[].login' || true)
          if echo "$ASSIGNEES" | grep -Eq '^Copilot$'; then
            echo "Coding Agent already assigned"
            gh issue comment "$ISSUE" --repo "$REPO" --body "@copilot please start implementation" || true
            continue
          fi
          
          echo "Attempting to assign Copilot (based on historical success pattern)..."
          ASSIGNED=false
          
          # Assign Copilot (historical data shows 100% success rate)
          echo "Assigning Copilot to issue #$ISSUE..."
          if gh api repos/"$REPO"/issues/"$ISSUE"/assignees -X POST -f assignees[]=Copilot 2>/dev/null; then
            echo "Successfully assigned Copilot"
            ASSIGNED=true
          else
            echo "Failed to assign Copilot"
          fi
          
          if [ "$ASSIGNED" = false ]; then
            echo "Warning: could not assign any Coding Agent"
            echo "Repo assignables (sample):"
            gh api repos/"$REPO"/assignees --jq '.[].login' | head -20 || true
          fi
          
          # Nudge regardless
          gh issue comment "$ISSUE" --repo "$REPO" --body "@copilot please start implementation" || true
          
          # Verify assignment persisted; fail if it didn't
          ASSIGNEES=$(gh api repos/"$REPO"/issues/"$ISSUE" --jq '.assignees[].login' || true)
          if ! echo "$ASSIGNEES" | grep -Eq '^Copilot$'; then
            echo "Assignment did not persist; please check PAT permissions or app access"
            if [ "${{ github.event_name }}" = "workflow_dispatch" ] || [ "${{ github.event_name }}" = "issues" ]; then
              exit 1
            else
              echo "Continuing (non-fatal) for scheduled run"
            fi
          fi
        done
      env:
        # Prefer maintainer PAT for assignment; fallback to App token if PAT is not set
        GH_TOKEN: ${{ env.EFFECTIVE_GH_TOKEN }}
