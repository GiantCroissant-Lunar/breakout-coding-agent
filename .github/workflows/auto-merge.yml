name: Auto-merge Flow-RFC PRs

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [main]

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: startsWith(github.head_ref, 'copilot/')
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      
    - name: Auto-ready draft PRs
      run: |
        # If this is a draft PR from copilot, mark it ready automatically
        if [[ "${{ github.event.pull_request.draft }}" == "true" ]]; then
          echo "üîÑ Draft PR detected - marking as ready for review"
          gh pr ready ${{ github.event.number }}
          sleep 5  # Give GitHub time to process the change
        fi
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Validate PR format
      run: |
        echo "Validating PR for auto-merge eligibility..."
        
        PR_TITLE="${{ github.event.pull_request.title }}"
        PR_BODY="${{ github.event.pull_request.body }}"
        
        # Check if this is a Flow-RFC-001 PR (special validation)
        if [[ "$PR_TITLE" == *"Flow-RFC-001"* ]]; then
          echo "‚úÖ Flow-RFC-001 PR detected - applying special validation"
          
          # Validate only README.md changed
          files_changed=$(gh api repos/${{ github.repository }}/pulls/${{ github.event.number }}/files --jq '.[].filename' | wc -l)
          if [ $files_changed -gt 1 ]; then
            echo "‚ùå Too many files changed ($files_changed). Flow-RFC-001 should only change README.md"
            exit 1
          fi
          
          # Check if README.md was changed
          readme_changed=$(gh api repos/${{ github.repository }}/pulls/${{ github.event.number }}/files --jq '.[] | select(.filename == "README.md") | .filename')
          if [ -z "$readme_changed" ]; then
            echo "‚ùå README.md not changed. Flow-RFC-001 requires README.md update"
            exit 1
          fi
          
          echo "‚úÖ Flow-RFC-001 validation passed"
          
        # Check if this is a Game-RFC PR
        elif [[ "$PR_TITLE" == *"Game-RFC-"* ]]; then
          echo "‚úÖ Game-RFC PR detected"
          
          # Extract RFC number for validation
          RFC_NUM=$(echo "$PR_TITLE" | grep -o 'Game-RFC-[0-9]\+' | head -1)
          echo "Processing $RFC_NUM"
          
          # Validate PR references an issue
          if [[ "$PR_BODY" == *"Closes #"* ]] || [[ "$PR_BODY" == *"closes #"* ]]; then
            echo "‚úÖ PR properly references issue"
          else
            echo "‚ùå Game-RFC PRs must reference the implementation issue (use 'Closes #issue-number')"
            exit 1
          fi
          
          echo "‚úÖ Game-RFC validation passed"
          
        else
          echo "‚ÑπÔ∏è Not a recognized RFC PR, skipping auto-merge"
          exit 0
        fi
        
        echo "‚úÖ PR validation completed successfully"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Auto-approve and merge
      run: |
        PR_TITLE="${{ github.event.pull_request.title }}"
        
        if [[ "$PR_TITLE" == *"Flow-RFC-001"* ]]; then
          echo "Auto-approving Flow-RFC-001 PR..."
          APPROVAL_MSG="‚úÖ Flow-RFC-001 auto-approved: Basic PR merge cycle validation"
          MERGE_MSG="ü§ñ Auto-merged Flow-RFC-001 test PR"
          
        elif [[ "$PR_TITLE" == *"Game-RFC-"* ]]; then
          RFC_NUM=$(echo "$PR_TITLE" | grep -o 'Game-RFC-[0-9]\+' | head -1)
          echo "Auto-approving $RFC_NUM PR..."
          APPROVAL_MSG="‚úÖ $RFC_NUM auto-approved: Implementation validated"
          MERGE_MSG="ü§ñ Auto-merged $RFC_NUM implementation"
          
        else
          echo "‚ùå Unexpected PR type reached auto-merge step"
          exit 1
        fi
        
        # Auto-approve and merge the PR (fully automated)
        echo "ü§ñ Auto-approving and merging RFC implementation..."
        gh pr review ${{ github.event.number }} --approve --body "$APPROVAL_MSG"
        
        # Wait a moment for approval to register
        sleep 5
        
        # Auto-merge with branch deletion (fully automated)
        gh pr merge ${{ github.event.number }} --squash --delete-branch --body "$MERGE_MSG"
        
        echo "‚úÖ PR merged successfully"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}}
    
    - name: Update Flow-RFC status
      if: success()
      run: |
        echo "Flow-RFC-001 completed successfully! üéâ"
        echo "GitHub Coding Agent can now reliably merge PRs."