name: Auto-merge Flow-RFC PRs

on:
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [main]

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: startsWith(github.head_ref, 'copilot/')

    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        persist-credentials: true
        fetch-depth: 1
    - name: Auto-ready draft PRs
      run: |
        # If this is a draft PR from copilot, mark it ready automatically
        if [[ "${{ github.event.pull_request.draft }}" == "true" ]]; then
          echo "üöÄ Draft PR detected - marking as ready for review"
          gh pr ready ${{ github.event.number }}
          sleep 5  # Give GitHub time to process the change
        fi
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Validate PR format
      run: .github/scripts/validate_pr.sh
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        PR_NUMBER: ${{ github.event.number }}

    - name: Auto-approve and merge
      run: |
        PR_TITLE="${{ github.event.pull_request.title }}"

        if [[ "$PR_TITLE" == *"Flow-RFC-001"* ]]; then
          echo "Auto-approving Flow-RFC-001 PR..."
          APPROVAL_MSG="‚úÖ Flow-RFC-001 auto-approved: Basic PR merge cycle validation"
          MERGE_MSG="‚úÖ Auto-merged Flow-RFC-001 test PR"

        elif [[ "$PR_TITLE" == *"Game-RFC-"* ]]; then
          RFC_NUM=$(echo "$PR_TITLE" | grep -o 'Game-RFC-[0-9]\+' | head -1)
          echo "Auto-approving $RFC_NUM PR..."
          APPROVAL_MSG="‚úÖ $RFC_NUM auto-approved: Implementation validated"
          MERGE_MSG="‚úÖ Auto-merged $RFC_NUM implementation"

        else
          echo "‚ùå Unexpected PR type reached auto-merge step"
          exit 1
        fi

        # Auto-approve and merge the PR (fully automated)
        echo "ü§ñ Auto-approving and merging RFC implementation..."
        gh pr review ${{ github.event.number }} --approve --body "$APPROVAL_MSG"

        # Wait a moment for approval to register
        sleep 5

        # Auto-merge with branch deletion (fully automated)
        gh pr merge ${{ github.event.number }} --squash --delete-branch --body "$MERGE_MSG"

        echo "‚úÖ PR merged successfully"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Update Flow-RFC status
      if: success()
      run: |
        echo "Flow-RFC-001 completed successfully! üéâ"
        echo "GitHub Coding Agent can now reliably merge PRs."
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
